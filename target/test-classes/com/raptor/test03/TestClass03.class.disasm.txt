Classfile /C:/Users/flyin/Documents/Java/asm-recompiler/src/test/java/com/raptor/test03/TestClass03.class
  Last modified Dec 2, 2020; size 2504 bytes
  SHA-256 checksum 5a4ecb5319ab5d3df066469048b92bc6ab89a9a1273145a163d0f97dccf3ba88
  Compiled from "TestClass03.java"
public class com.raptor.test03.TestClass03<T extends java.lang.String & java.lang.CharSequence, E extends java.lang.Object> extends java.lang.Object
  minor version: 65535
  major version: 58
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #8                          // com/raptor/test03/TestClass03
  super_class: #2                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 6, attributes: 4
Constant pool:
    #1 = Methodref          #2.#3         // java/lang/Object."<init>":()V
    #2 = Class              #4            // java/lang/Object
    #3 = NameAndType        #5:#6         // "<init>":()V
    #4 = Utf8               java/lang/Object
    #5 = Utf8               <init>
    #6 = Utf8               ()V
    #7 = Fieldref           #8.#9         // com/raptor/test03/TestClass03.x1:I
    #8 = Class              #10           // com/raptor/test03/TestClass03
    #9 = NameAndType        #11:#12       // x1:I
   #10 = Utf8               com/raptor/test03/TestClass03
   #11 = Utf8               x1
   #12 = Utf8               I
   #13 = Float              17.2f
   #14 = Double             -1.05d
   #16 = Class              #17           // java/lang/Number
   #17 = Utf8               java/lang/Number
   #18 = Methodref          #19.#20       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
   #19 = Class              #21           // java/lang/Integer
   #20 = NameAndType        #22:#23       // valueOf:(I)Ljava/lang/Integer;
   #21 = Utf8               java/lang/Integer
   #22 = Utf8               valueOf
   #23 = Utf8               (I)Ljava/lang/Integer;
   #24 = Methodref          #25.#26       // java/lang/Float.valueOf:(F)Ljava/lang/Float;
   #25 = Class              #27           // java/lang/Float
   #26 = NameAndType        #22:#28       // valueOf:(F)Ljava/lang/Float;
   #27 = Utf8               java/lang/Float
   #28 = Utf8               (F)Ljava/lang/Float;
   #29 = Methodref          #30.#31       // java/lang/Double.valueOf:(D)Ljava/lang/Double;
   #30 = Class              #32           // java/lang/Double
   #31 = NameAndType        #22:#33       // valueOf:(D)Ljava/lang/Double;
   #32 = Utf8               java/lang/Double
   #33 = Utf8               (D)Ljava/lang/Double;
   #34 = Methodref          #8.#35        // com/raptor/test03/TestClass03.f2:([Ljava/lang/Number;)V
   #35 = NameAndType        #36:#37       // f2:([Ljava/lang/Number;)V
   #36 = Utf8               f2
   #37 = Utf8               ([Ljava/lang/Number;)V
   #38 = Methodref          #39.#40       // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
   #39 = Class              #41           // java/util/Arrays
   #40 = NameAndType        #42:#43       // asList:([Ljava/lang/Object;)Ljava/util/List;
   #41 = Utf8               java/util/Arrays
   #42 = Utf8               asList
   #43 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;
   #44 = InterfaceMethodref #45.#46       // java/util/List.size:()I
   #45 = Class              #47           // java/util/List
   #46 = NameAndType        #48:#49       // size:()I
   #47 = Utf8               java/util/List
   #48 = Utf8               size
   #49 = Utf8               ()I
   #50 = InterfaceMethodref #45.#51       // java/util/List.get:(I)Ljava/lang/Object;
   #51 = NameAndType        #52:#53       // get:(I)Ljava/lang/Object;
   #52 = Utf8               get
   #53 = Utf8               (I)Ljava/lang/Object;
   #54 = InvokeDynamic      #0:#55        // #0:accept:([Ljava/lang/Number;Ljava/util/List;)Ljava/util/function/Consumer;
   #55 = NameAndType        #56:#57       // accept:([Ljava/lang/Number;Ljava/util/List;)Ljava/util/function/Consumer;
   #56 = Utf8               accept
   #57 = Utf8               ([Ljava/lang/Number;Ljava/util/List;)Ljava/util/function/Consumer;
   #58 = InterfaceMethodref #45.#59       // java/util/List.forEach:(Ljava/util/function/Consumer;)V
   #59 = NameAndType        #60:#61       // forEach:(Ljava/util/function/Consumer;)V
   #60 = Utf8               forEach
   #61 = Utf8               (Ljava/util/function/Consumer;)V
   #62 = Fieldref           #63.#64       // java/lang/System.out:Ljava/io/PrintStream;
   #63 = Class              #65           // java/lang/System
   #64 = NameAndType        #66:#67       // out:Ljava/io/PrintStream;
   #65 = Utf8               java/lang/System
   #66 = Utf8               out
   #67 = Utf8               Ljava/io/PrintStream;
   #68 = Methodref          #69.#70       // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
   #69 = Class              #71           // java/util/Objects
   #70 = NameAndType        #72:#73       // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
   #71 = Utf8               java/util/Objects
   #72 = Utf8               requireNonNull
   #73 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #74 = InvokeDynamic      #1:#75        // #1:accept:(Ljava/io/PrintStream;)Ljava/util/function/Consumer;
   #75 = NameAndType        #56:#76       // accept:(Ljava/io/PrintStream;)Ljava/util/function/Consumer;
   #76 = Utf8               (Ljava/io/PrintStream;)Ljava/util/function/Consumer;
   #77 = String             #78           // zero
   #78 = Utf8               zero
   #79 = Methodref          #80.#81       // java/io/PrintStream.println:(Ljava/lang/String;)V
   #80 = Class              #82           // java/io/PrintStream
   #81 = NameAndType        #83:#84       // println:(Ljava/lang/String;)V
   #82 = Utf8               java/io/PrintStream
   #83 = Utf8               println
   #84 = Utf8               (Ljava/lang/String;)V
   #85 = String             #86           // one
   #86 = Utf8               one
   #87 = String             #88           // two
   #88 = Utf8               two
   #89 = String             #90           // three
   #90 = Utf8               three
   #91 = Methodref          #80.#92       // java/io/PrintStream.println:(I)V
   #92 = NameAndType        #83:#93       // println:(I)V
   #93 = Utf8               (I)V
   #94 = InterfaceMethodref #45.#95       // java/util/List.indexOf:(Ljava/lang/Object;)I
   #95 = NameAndType        #96:#97       // indexOf:(Ljava/lang/Object;)I
   #96 = Utf8               indexOf
   #97 = Utf8               (Ljava/lang/Object;)I
   #98 = Utf8               Code
   #99 = Utf8               LineNumberTable
  #100 = Utf8               f1
  #101 = Utf8               (I[I)V
  #102 = Utf8               Signature
  #103 = Utf8               <T:Ljava/lang/Number;>([TT;)V
  #104 = Utf8               f3
  #105 = Utf8               StackMapTable
  #106 = Utf8               lambda$f2$0
  #107 = Utf8               ([Ljava/lang/Number;Ljava/util/List;Ljava/lang/Number;)V
  #108 = Utf8               <clinit>
  #109 = Utf8               <T:Ljava/lang/String;:Ljava/lang/CharSequence;E:Ljava/lang/Object;>Ljava/lang/Object;
  #110 = Utf8               SourceFile
  #111 = Utf8               TestClass03.java
  #112 = Utf8               BootstrapMethods
  #113 = MethodHandle       6:#114        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #114 = Methodref          #115.#116     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #115 = Class              #117          // java/lang/invoke/LambdaMetafactory
  #116 = NameAndType        #118:#119     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #117 = Utf8               java/lang/invoke/LambdaMetafactory
  #118 = Utf8               metafactory
  #119 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #120 = MethodType         #121          //  (Ljava/lang/Object;)V
  #121 = Utf8               (Ljava/lang/Object;)V
  #122 = MethodHandle       6:#123        // REF_invokeStatic com/raptor/test03/TestClass03.lambda$f2$0:([Ljava/lang/Number;Ljava/util/List;Ljava/lang/Number;)V
  #123 = Methodref          #8.#124       // com/raptor/test03/TestClass03.lambda$f2$0:([Ljava/lang/Number;Ljava/util/List;Ljava/lang/Number;)V
  #124 = NameAndType        #106:#107     // lambda$f2$0:([Ljava/lang/Number;Ljava/util/List;Ljava/lang/Number;)V
  #125 = MethodType         #126          //  (Ljava/lang/Number;)V
  #126 = Utf8               (Ljava/lang/Number;)V
  #127 = MethodHandle       5:#128        // REF_invokeVirtual java/io/PrintStream.println:(Ljava/lang/Object;)V
  #128 = Methodref          #80.#129      // java/io/PrintStream.println:(Ljava/lang/Object;)V
  #129 = NameAndType        #83:#121      // println:(Ljava/lang/Object;)V
  #130 = Utf8               InnerClasses
  #131 = Class              #132          // java/lang/invoke/MethodHandles$Lookup
  #132 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #133 = Class              #134          // java/lang/invoke/MethodHandles
  #134 = Utf8               java/lang/invoke/MethodHandles
  #135 = Utf8               Lookup
{
  public static int x1;
    descriptor: I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC

  public com.raptor.test03.TestClass03();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 5: 0

  public static void f1(int, int...);
    descriptor: (I[I)V
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=5, locals=8, args_size=2
         0: getstatic     #7                  // Field x1:I
         3: istore_2
         4: bipush        10
         6: istore_3
         7: sipush        320
        10: istore        4
        12: ldc           #13                 // float 17.2f
        14: fstore        5
        16: ldc2_w        #14                 // double -1.05d
        19: dstore        6
        21: iinc          2, 1
        24: iconst_5
        25: anewarray     #16                 // class java/lang/Number
        28: dup
        29: iconst_0
        30: iload_2
        31: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        34: aastore
        35: dup
        36: iconst_1
        37: iload_3
        38: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        41: aastore
        42: dup
        43: iconst_2
        44: iload         4
        46: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        49: aastore
        50: dup
        51: iconst_3
        52: fload         5
        54: invokestatic  #24                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
        57: aastore
        58: dup
        59: iconst_4
        60: dload         6
        62: invokestatic  #29                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
        65: aastore
        66: invokestatic  #34                 // Method f2:([Ljava/lang/Number;)V
        69: return
      LineNumberTable:
        line 10: 0
        line 11: 4
        line 12: 7
        line 13: 12
        line 14: 16
        line 15: 21
        line 16: 24
        line 17: 69

  public static <T extends java.lang.Number> void f2(T...);
    descriptor: ([Ljava/lang/Number;)V
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokestatic  #38                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
         4: astore_1
         5: aload_1
         6: invokeinterface #44,  1           // InterfaceMethod java/util/List.size:()I
        11: pop
        12: aload_1
        13: iconst_0
        14: invokeinterface #50,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
        19: pop
        20: aload_1
        21: aload_0
        22: aload_1
        23: invokedynamic #54,  0             // InvokeDynamic #0:accept:([Ljava/lang/Number;Ljava/util/List;)Ljava/util/function/Consumer;
        28: invokeinterface #58,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
        33: aload_1
        34: getstatic     #62                 // Field java/lang/System.out:Ljava/io/PrintStream;
        37: dup
        38: invokestatic  #68                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
        41: pop
        42: invokedynamic #74,  0             // InvokeDynamic #1:accept:(Ljava/io/PrintStream;)Ljava/util/function/Consumer;
        47: invokeinterface #58,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
        52: return
      LineNumberTable:
        line 20: 0
        line 21: 5
        line 22: 12
        line 23: 20
        line 26: 33
        line 27: 52
    Signature: #103                         // <T:Ljava/lang/Number;>([TT;)V

  public static void f3(int);
    descriptor: (I)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: iload_0
         1: tableswitch   { // 0 to 4
                       0: 36
                       1: 47
                       2: 58
                       3: 80
                       4: 69
                 default: 80
            }
        36: getstatic     #62                 // Field java/lang/System.out:Ljava/io/PrintStream;
        39: ldc           #77                 // String zero
        41: invokevirtual #79                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        44: goto          87
        47: getstatic     #62                 // Field java/lang/System.out:Ljava/io/PrintStream;
        50: ldc           #85                 // String one
        52: invokevirtual #79                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        55: goto          87
        58: getstatic     #62                 // Field java/lang/System.out:Ljava/io/PrintStream;
        61: ldc           #87                 // String two
        63: invokevirtual #79                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        66: goto          87
        69: getstatic     #62                 // Field java/lang/System.out:Ljava/io/PrintStream;
        72: ldc           #89                 // String three
        74: invokevirtual #79                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        77: goto          87
        80: getstatic     #62                 // Field java/lang/System.out:Ljava/io/PrintStream;
        83: iload_0
        84: invokevirtual #91                 // Method java/io/PrintStream.println:(I)V
        87: return
      LineNumberTable:
        line 30: 0
        line 31: 36
        line 32: 44
        line 33: 47
        line 34: 55
        line 35: 58
        line 36: 66
        line 37: 69
        line 38: 77
        line 39: 80
        line 42: 87
      StackMapTable: number_of_entries = 6
        frame_type = 36 /* same */
        frame_type = 10 /* same */
        frame_type = 10 /* same */
        frame_type = 10 /* same */
        frame_type = 10 /* same */
        frame_type = 6 /* same */

  private static void lambda$f2$0(java.lang.Number[], java.util.List, java.lang.Number);
    descriptor: ([Ljava/lang/Number;Ljava/util/List;Ljava/lang/Number;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokeinterface #94,  2           // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
         8: aconst_null
         9: aastore
        10: return
      LineNumberTable:
        line 24: 0
        line 25: 10

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: sipush        300
         3: putstatic     #7                  // Field x1:I
         6: return
      LineNumberTable:
        line 7: 0
}
Signature: #109                         // <T:Ljava/lang/String;:Ljava/lang/CharSequence;E:Ljava/lang/Object;>Ljava/lang/Object;
SourceFile: "TestClass03.java"
BootstrapMethods:
  0: #113 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #120 (Ljava/lang/Object;)V
      #122 REF_invokeStatic com/raptor/test03/TestClass03.lambda$f2$0:([Ljava/lang/Number;Ljava/util/List;Ljava/lang/Number;)V
      #125 (Ljava/lang/Number;)V
  1: #113 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #120 (Ljava/lang/Object;)V
      #127 REF_invokeVirtual java/io/PrintStream.println:(Ljava/lang/Object;)V
      #125 (Ljava/lang/Number;)V
InnerClasses:
  public static final #135= #131 of #133; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
