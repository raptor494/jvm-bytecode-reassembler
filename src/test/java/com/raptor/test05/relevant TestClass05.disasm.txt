class com.raptor.test05.TestClass05 {
  void foo();
    Code:
      ... // Initialize list in local var 1
      aload_1
      getstatic     #22         // Field java/lang/System.out:Ljava/io/PrintStream;
      invokedynamic #34,  0     // InvokeDynamic #0:accept:(Ljava/io/PrintStream;)Ljava/util/function/Consumer;
      invokevirtual #38         // Method java/util/ArrayList.forEach:(Ljava/util/function/Consumer;)V
      return
}
BootstrapMethods:
  0: #50 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #57 (Ljava/lang/Object;)V
      #59 REF_invokeVirtual java/io/PrintStream.println:(Ljava/lang/String;)V
      #66 (Ljava/lang/String;)V

////////////////////////////////////////////
class com.raptor.test05.TestClass05 {
  void foo();
    Code:
      ... // Initialize list in local var 1
      aload         list
      getstatic     java.lang.System.out: java.io.PrintStream
      invokedynamic { invokestatic java.lang.invoke.LambdaMetafactory.metafactory: (java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.invoke.MethodType, java.lang.invoke.MethodHandle, java.lang.invoke.MethodType) java.lang.invoke.CallSite ( (java.lang.Object) void, invokevirtual java.io.PrintStream.println: (java.lang.String) void, (java.lang.String) void ) ) }: accept: (java.io.PrintStream) java.util.function.Consumer
      invokevirtual java.util.ArrayList.forEach: (java.util.function.Consumer) void
      return
}